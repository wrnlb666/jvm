; testing alloc memory and free memory on the heap
import libheap.so as heap
import libprint.so as print

call main
halt

main: 
    push 26
    dup 0

    ; allocate memory and print it
    native heap.vm_malloc
    dup 0
    native print.print_ptr
    native print.print_newline

    ; for loop to store 'A' to 'Z' on the heap
    push 0  ; int i = 0
    add_to_heap:
        dup 1   ; address
        dup 1   ; index

        ; value
        dup 0
        push 65
        addi

        native heap.vm_heap_push

        ; i++
        push 1
        addi
        dup 0

        ; i != 26
        dup 3
        cmpi
        jne add_to_heap
    pop 1

    ; for loop to print 'A' to 'Z' from the heap
    push 0  ; int i = 0
    print_heap:
        dup 1   ; address
        dup 1   ; index

        native heap.vm_heap_pop
        native print.print_utf8
        push 1
        native print.print_space

        ; i++
        push 1
        addi
        dup 0

        ; i != 26
        dup 3
        cmpi
        jne print_heap
    pop 1
    native print.print_newline


    native heap.vm_free
    pop 1
    ret